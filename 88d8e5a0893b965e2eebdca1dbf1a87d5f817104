{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2f69ce97_ce8ca074",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-04-22T15:51:16Z",
      "side": 1,
      "message": "We typically use Gerrit persistent caches for that, which are also available to plugins.\n\nHaving a persistent cache gives a lot of advantages:\n- metrics\n- cleanup mechanism\n- integration with Gerrit SSH tools\n\nAny reason why you did not chose to use a persistent cache instead?",
      "revId": "88d8e5a0893b965e2eebdca1dbf1a87d5f817104",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34834b0e_934cbe0c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1037991
      },
      "writtenOn": "2024-04-23T06:38:39Z",
      "side": 1,
      "message": "This is a valid question. The requirement here is to store data programmatically and reliably. The term \u0027cache\u0027 suggests a temporary storage to reduce redundant calls, and I had concerns about how the cleanup mechanisms would handle data, eg during updates to the plugin or Gerrit itself.",
      "parentUuid": "2f69ce97_ce8ca074",
      "revId": "88d8e5a0893b965e2eebdca1dbf1a87d5f817104",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65cfa042_204d6481",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-04-23T08:44:35Z",
      "side": 1,
      "message": "\u003e This is a valid question. The requirement here is to store data programmatically and reliably. The term \u0027cache\u0027 suggests a temporary storage to reduce redundant calls\n\nI agree that the term _cache_ is misleading :-) Gerrit persistent caches are effectively storage areas for archiving information.\n\nOne practical example is the Gerrit persistent sessions: they are stored in a cache but not really for reducing redundant calls.\n\n\u003e and I had concerns about how the cleanup mechanisms would handle data, eg during updates to the plugin or Gerrit itself.\n\nIn Gerrit caches are versioned and use protobuf for serialisation, so that you can read a previous version of the cache even when you change values. The cleanup is managed by the plugin, if you want to. The store and retrieval of data can also be completely managed by the plugin, as a real store.\n\nThe advantage is that you get for free lots of services and also allow a pluggable backend implementation (e.g. H2, ChronicleMap, other).",
      "parentUuid": "34834b0e_934cbe0c",
      "revId": "88d8e5a0893b965e2eebdca1dbf1a87d5f817104",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}